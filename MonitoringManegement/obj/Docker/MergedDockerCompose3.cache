name: dockercompose16943300209358216750
services:
  monitoringmanegement:
    build:
      context: C:\Users\alexf\OneDrive\Desktop\FACULTA\SD\tema1\MonitoringManegement
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: MonitoringManegement
      target: base
    container_name: MonitoringManegement
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: ""
    image: monitoringmanegement:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/bin/Debug/net6.0/MonitoringManegement.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
      - type: bind
        source: C:\Users\alexf\OneDrive\Desktop\FACULTA\SD\tema1\MonitoringManegement\MonitoringManegement
        target: /app
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\OneDrive\Desktop\FACULTA\SD\tema1\MonitoringManegement
        target: /src
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\.nuget\packages\
        target: /.nuget/packages
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\AppData\Roaming/ASP.NET/Https
        target: /home/app/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\alexf\AppData\Roaming/Microsoft/UserSecrets
        target: /home/app/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net6.0
        target: /HotReloadProxy
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
        target: /HotReloadAgent
        read_only: true
        bind:
          create_host_path: true
  monitoringserverapp:
    build:
      context: C:\Users\alexf\OneDrive\Desktop\FACULTA\SD\tema1\MonitoringManegement
      dockerfile: Dockerfile
    container_name: monitoring-management-app
    depends_on:
      monitoringwebdb:
        condition: service_started
        required: true
    environment:
      DB_HOST: monitoringwebdb
      DB_NAME: monitoringManagement
      DB_SA_PASSWORD: Pasword@12345#
      DB_USER: sa
    image: monitoringserverapp
    networks:
      benetwork: null
    ports:
      - mode: ingress
        target: 80
        published: "7202"
        protocol: tcp
  monitoringwebdb:
    container_name: monitoringwebdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Pasword@12345#
    image: mcr.microsoft.com/mssql/server:latest
    networks:
      benetwork: null
    ports:
      - mode: ingress
        target: 1433
        published: "1436"
        protocol: tcp
networks:
  benetwork:
    name: benetwork
    external: true
  default:
    name: dockercompose16943300209358216750_default